<<<<<<< HEAD
#server:
#  port: 8083
#  cache:
#    type: redis
#    redis:
#      host: localhost
#      port: 6379
#      cache:
#        time-to-live: 60000
#        eviction-policy: lru
#
#eureka:
#  client:
#    register-with-eureka : true
#    fetch-registry : true
#    service-url :
#      defaultZone : http://localhost:8761/eureka/
#  instance :
#    hostname : localhost
#
#
#
#logging:
#  file:
#    name: C:/Users/sparrow/Downloads/Logs/loggers.log


=======
>>>>>>> b253af3 (Cloud config & EDA)
server:
  port: 8083

spring:
<<<<<<< HEAD
=======
  application:
    name: INVENTORY-SERVICE
  cloud:
    config:
      uri: http://localhost:9196
  config:
    import: configserver:http://localhost:9196
>>>>>>> b253af3 (Cloud config & EDA)
  datasource:
    url: jdbc:mysql://localhost:3306/eInventory
    username: root
    password: Anuradha@01
  jpa:
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
    generate-ddl: true
    hibernate:
      ddl-auto: update
  cache:
    type: redis
    redis:
      host: localhost
      port: 6379
<<<<<<< HEAD

  eureka:
    client:
      register-with-eureka: true
      fetch-registry: true
      service-url:
        defaultZone: http://localhost:8761/eureka/
    instance:
      hostname: localhost

logging:
  file:
    name: C:/Users/sparrow/Downloads/Logs/loggers.log

management:
  tracing:
    sampling:
      probability: 1.0
=======
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: inventory_group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: '*'
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
>>>>>>> b253af3 (Cloud config & EDA)
